Operation Badger: Sprint #11 Plan - The Validated QVM Test
DOCUMENT STATUS: FINAL - OFFICIAL SPRINT #11 DIRECTIVE
DATE: 2025-07-25
TO: Operation Badger Development Team
FROM: Lead Quant

1. Mission Assessment & Mandate
Sprint #10 Outcome: The infrastructure sprint was a complete success. We have successfully researched, selected, and integrated a professional-grade, point-in-time (PIT) fundamental data provider (Nasdaq Data Link / Sharadar). The critical lookahead bias flaw identified in Sprint #9 has been solved at its source.

New Mandate: Our mission for Sprint #11 is to re-run the Composite QVM strategy, this time with our new, valid, point-in-time data source. This will be our first backtest that is free from lookahead bias and represents a true, scientifically valid test of a multi-factor model.

2. Sprint #11 Objective: The First Valid Multi-Factor Test
Hypothesis: A portfolio constructed by ranking stocks on a composite QVM score—calculated using true, historical point-in-time data from our new Sharadar database—will produce superior and statistically valid risk-adjusted returns.

Why This Is Our Most Important Test Yet:

Scientific Validity: For the first time, the backtest will accurately simulate real-world conditions where only past information is available.

True Alpha Test: This will reveal if the QVM logic itself has a genuine predictive edge, now that the data is clean.

Foundation for the Future: A successful result here would give us our first deployable, institutional-grade strategy.

3. Execution Plan: Step-by-Step Instructions
This sprint focuses on refactoring our QVM backtest to use the new data source.

Task 1: Integrate the New Data Provider
What: Refactor our data loading and feature engineering logic to use the nasdaqdatalink library instead of yfinance for fundamental data.

Why: To feed our backtest with valid, point-in-time data.

How-To:

Acquire API Key: The Lead Quant will provide the API key for the team's Nasdaq Data Link subscription.

Refactor features/qvm_factors.py: You will need to rewrite the calculation functions to work with the data structure of the Sharadar SF1 table. The nasdaqdatalink library documentation will be your guide. You will be fetching specific indicators (like ROE, EBIT, EVE) for a given ticker and date.

Create a PIT Data Cache: To avoid repeatedly hitting the API during a backtest (which is slow and costly), create a simple caching mechanism. The first time you fetch fundamentals for a ticker on a specific date, save the result to a local file (e.g., in a cache/ directory). In subsequent runs, the code should check the cache first before making an API call.

Conceptual Code for PIT Data Fetching:

import nasdaqdatalink
import pandas as pd

# Configure with your API key
nasdaqdatalink.api_config.api_key = "YOUR_API_KEY"

def get_point_in_time_fundamentals(ticker, date):
    """
    Fetches Sharadar Core Fundamentals (SF1) for a ticker as of a specific date.
    This is the core of our lookahead bias fix.
    """
    # Sharadar data is reported quarterly. We need to find the most recent
    # report that was public knowledge as of the given 'date'.
    data = nasdaqdatalink.get_table(
        'SHARADAR/SF1', 
        ticker=ticker,
        dimension='ARQ', # As-Reported Quarterly
        calendardate={'lte': date} # Get all reports up to this date
    )
    
    # The most recent report is the last row
    if not data.empty:
        return data.iloc[-1]
    return None

Task 2: Re-Run the Composite QVM Backtest
What: Execute the composite_qvm_backtest.py script from Sprint #9, now refactored to use the new PIT data functions.

How: The core logic of the strategy (ranking, composite score) remains the same. The only change is the source of the fundamental data used in the rebalancing loop.

Action: Run the full backtest on our small/mid-cap universe and generate the final performance report.

4. Sprint #11 Success Criteria
The success criteria are the same as our original, stringent targets for a multi-factor model. This is the real test. The strategy must meet the following to be considered for deployment:

✅ Post-Cost Annualized Return > 15%

✅ Post-Cost Sharpe Ratio > 1.0

✅ Max Drawdown < 25%

The results of this sprint will be the most meaningful we have produced to date. This will tell us if we have finally found a genuine, tradeable alpha signal. I look forward to seeing the valid results.