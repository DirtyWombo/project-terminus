{
  "permissions": {
    "allow": [
      "Bash(docker-compose logs:*)",
      "Bash(docker-compose exec:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(badger_env\\Scripts\\activate:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(rd:*)",
      "Bash(move github_automation.py git_helper.py)",
      "Bash(mv:*)",
      "Bash(gsutil mb:*)",
      "Bash(docker push:*)",
      "Bash(gcloud auth configure-docker:*)",
      "Bash(gcloud auth:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud artifacts repositories list:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(chcp:*)",
      "Bash(PYTHONIOENCODING=utf-8 python cloud_orchestrator.py --project-id operation-badger-quant --bucket-name operation-badger-quant-results-bucket)",
      "Bash(gcloud config set:*)",
      "Bash(GOOGLE_APPLICATION_CREDENTIALS=\"\" python cloud_orchestrator.py --project-id operation-badger-quant --bucket-name operation-badger-quant-results-bucket)",
      "Bash(grep:*)",
      "Bash(gcloud compute instances list:*)",
      "Bash(gsutil ls:*)",
      "Bash(echo:*)",
      "Bash(gcloud compute instances get-serial-port-output:*)",
      "Bash(gcloud container images list:*)",
      "Bash(gcloud compute instances delete:*)",
      "Bash(export IMAGE_URI=\"us-central1-docker.pkg.dev/operation-badger-quant/badger-containers/backtester:latest\")",
      "Bash(docker tag:*)",
      "Bash(gcloud artifacts docker images list:*)",
      "Bash(docker run:*)",
      "Bash(winpty docker run:*)",
      "Bash(docker build:*)",
      "Bash(cat:*)",
      "Bash(gcloud builds submit:*)",
      "Bash(docker save:*)",
      "Bash(cmd /c \"docker push us-central1-docker.pkg.dev/operation-badger-quant/badger-containers/backtester:latest\")",
      "Bash(gcloud services list:*)",
      "Bash(gcloud projects get-iam-policy:*)"
    ],
    "deny": []
  }
}